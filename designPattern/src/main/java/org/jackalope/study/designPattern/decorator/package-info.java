/**
 *
 * 装饰模式：
 * 动态为一个对象添加一些额外的职责
 * 使用情况：
 * 1.在不影响其他对象的情况下，动态、透明的为单个对象添加一些职责；
 * 2.处理那些可以撤销的职责；
 * 3.当不能采用生成子类的方法进行扩充时（如：子类数量过多；类被隐藏或类定义不允许生成子类）
 *
 * 包括4种角色：
 * 装饰角色；
 * 具体装饰角色；
 * 抽象构件角色；
 * 具体构件角色；
 *
 * @author zowie
 * Email: nicholas@iuni.com
 */
package org.jackalope.study.designPattern.decorator;